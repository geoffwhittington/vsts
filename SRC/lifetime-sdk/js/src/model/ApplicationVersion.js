/**
 * v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MobileVersion', 'model/ModuleVersion'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MobileVersion'), require('./ModuleVersion'));
  } else {
    // Browser globals (root is window)
    if (!root.LifetimeSdk) {
      root.LifetimeSdk = {};
    }
    root.LifetimeSdk.ApplicationVersion = factory(root.LifetimeSdk.ApiClient, root.LifetimeSdk.MobileVersion, root.LifetimeSdk.ModuleVersion);
  }
}(this, function(ApiClient, MobileVersion, ModuleVersion) {
  'use strict';




  /**
   * The ApplicationVersion model module.
   * @module model/ApplicationVersion
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>ApplicationVersion</code>.
   * Information about a specific version of an application and the versions of its modules.
   * @alias module:model/ApplicationVersion
   * @class
   * @param key {String} Application version unique identifier.
   */
  var exports = function(key) {
    var _this = this;

    _this['Key'] = key;






  };

  /**
   * Constructs a <code>ApplicationVersion</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicationVersion} obj Optional instance to populate.
   * @return {module:model/ApplicationVersion} The populated <code>ApplicationVersion</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Key')) {
        obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
      }
      if (data.hasOwnProperty('ApplicationKey')) {
        obj['ApplicationKey'] = ApiClient.convertToType(data['ApplicationKey'], 'String');
      }
      if (data.hasOwnProperty('Version')) {
        obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
      }
      if (data.hasOwnProperty('MobileVersions')) {
        obj['MobileVersions'] = ApiClient.convertToType(data['MobileVersions'], [MobileVersion]);
      }
      if (data.hasOwnProperty('PrimaryColor')) {
        obj['PrimaryColor'] = ApiClient.convertToType(data['PrimaryColor'], 'String');
      }
      if (data.hasOwnProperty('NativeHash')) {
        obj['NativeHash'] = ApiClient.convertToType(data['NativeHash'], 'String');
      }
      if (data.hasOwnProperty('ModuleVersions')) {
        obj['ModuleVersions'] = ApiClient.convertToType(data['ModuleVersions'], [ModuleVersion]);
      }
    }
    return obj;
  }

  /**
   * Application version unique identifier.
   * @member {String} Key
   * @default ''
   */
  exports.prototype['Key'] = '';
  /**
   * Application unique identifier.
   * @member {String} ApplicationKey
   * @default ''
   */
  exports.prototype['ApplicationKey'] = '';
  /**
   * Version of the application.
   * @member {String} Version
   * @default ''
   */
  exports.prototype['Version'] = '';
  /**
   * List of mobile versions.
   * @member {Array.<module:model/MobileVersion>} MobileVersions
   */
  exports.prototype['MobileVersions'] = undefined;
  /**
   * The primary color of the application interface.
   * @member {String} PrimaryColor
   * @default ''
   */
  exports.prototype['PrimaryColor'] = '';
  /**
   * The native has relative to the mobile platform.
   * @member {String} NativeHash
   * @default ''
   */
  exports.prototype['NativeHash'] = '';
  /**
   * List of module versions.
   * @member {Array.<module:model/ModuleVersion>} ModuleVersions
   */
  exports.prototype['ModuleVersions'] = undefined;



  return exports;
}));


