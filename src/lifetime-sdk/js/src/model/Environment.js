/**
 * v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.LifetimeSdk) {
      root.LifetimeSdk = {};
    }
    root.LifetimeSdk.Environment = factory(root.LifetimeSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Environment model module.
   * @module model/Environment
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Environment</code>.
   * An environment and its information.
   * @alias module:model/Environment
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>Environment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Environment} obj Optional instance to populate.
   * @return {module:model/Environment} The populated <code>Environment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Key')) {
        obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
      }
      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
      }
      if (data.hasOwnProperty('OSVersion')) {
        obj['OSVersion'] = ApiClient.convertToType(data['OSVersion'], 'String');
      }
      if (data.hasOwnProperty('Order')) {
        obj['Order'] = ApiClient.convertToType(data['Order'], 'Number');
      }
      if (data.hasOwnProperty('HostName')) {
        obj['HostName'] = ApiClient.convertToType(data['HostName'], 'String');
      }
      if (data.hasOwnProperty('UseHTTPS')) {
        obj['UseHTTPS'] = ApiClient.convertToType(data['UseHTTPS'], 'Boolean');
      }
      if (data.hasOwnProperty('EnvironmentType')) {
        obj['EnvironmentType'] = ApiClient.convertToType(data['EnvironmentType'], 'String');
      }
      if (data.hasOwnProperty('NumberOfFrontEnds')) {
        obj['NumberOfFrontEnds'] = ApiClient.convertToType(data['NumberOfFrontEnds'], 'Number');
      }
      if (data.hasOwnProperty('ApplicationServerType')) {
        obj['ApplicationServerType'] = ApiClient.convertToType(data['ApplicationServerType'], 'String');
      }
      if (data.hasOwnProperty('ApplicationServer')) {
        obj['ApplicationServer'] = ApiClient.convertToType(data['ApplicationServer'], 'String');
      }
      if (data.hasOwnProperty('DatabaseProvider')) {
        obj['DatabaseProvider'] = ApiClient.convertToType(data['DatabaseProvider'], 'String');
      }
      if (data.hasOwnProperty('IsCloudEnvironment')) {
        obj['IsCloudEnvironment'] = ApiClient.convertToType(data['IsCloudEnvironment'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Unique identifier of the environment.
   * @member {String} Key
   * @default ''
   */
  exports.prototype['Key'] = '';
  /**
   * Name of the environment.
   * @member {String} Name
   * @default ''
   */
  exports.prototype['Name'] = '';
  /**
   * Platform Server version. [X.X.X.X]
   * @member {String} OSVersion
   * @default ''
   */
  exports.prototype['OSVersion'] = '';
  /**
   * The order of the environment as registered in Lifetime.
   * @member {Number} Order
   */
  exports.prototype['Order'] = undefined;
  /**
   * Hostname of the environment as registered.
   * @member {String} HostName
   * @default ''
   */
  exports.prototype['HostName'] = '';
  /**
   * Indicates if connections to the environment are made using HTTPS.
   * @member {Boolean} UseHTTPS
   */
  exports.prototype['UseHTTPS'] = undefined;
  /**
   * Indicates the type of the environment. [Development | Test | Production]
   * @member {String} EnvironmentType
   * @default ''
   */
  exports.prototype['EnvironmentType'] = '';
  /**
   * Number of front-end servers in the environment.
   * @member {Number} NumberOfFrontEnds
   */
  exports.prototype['NumberOfFrontEnds'] = undefined;
  /**
   * Stack of the application server. [.NET | JAVA]
   * @member {String} ApplicationServerType
   * @default ''
   */
  exports.prototype['ApplicationServerType'] = '';
  /**
   * Application server in use. [IIS | JBoss | WebLogic]
   * @member {String} ApplicationServer
   * @default ''
   */
  exports.prototype['ApplicationServer'] = '';
  /**
   * Type of database provider. [SqlServer | Oracle]
   * @member {String} DatabaseProvider
   * @default ''
   */
  exports.prototype['DatabaseProvider'] = '';
  /**
   * Indicates if the environment is running on a cloud service.
   * @member {Boolean} IsCloudEnvironment
   */
  exports.prototype['IsCloudEnvironment'] = undefined;



  return exports;
}));


