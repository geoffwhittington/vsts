/**
 * v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AppStatusInEnv'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AppStatusInEnv'));
  } else {
    // Browser globals (root is window)
    if (!root.LifetimeSdk) {
      root.LifetimeSdk = {};
    }
    root.LifetimeSdk.Application = factory(root.LifetimeSdk.ApiClient, root.LifetimeSdk.AppStatusInEnv);
  }
}(this, function(ApiClient, AppStatusInEnv) {
  'use strict';




  /**
   * The Application model module.
   * @module model/Application
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Application</code>.
   * An application with its details and its status in the environments were it is running.
   * @alias module:model/Application
   * @class
   * @param key {String} Application unique identifier.
   */
  var exports = function(key) {
    var _this = this;

    _this['Key'] = key;









  };

  /**
   * Constructs a <code>Application</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Application} obj Optional instance to populate.
   * @return {module:model/Application} The populated <code>Application</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Key')) {
        obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
      }
      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
      }
      if (data.hasOwnProperty('Kind')) {
        obj['Kind'] = ApiClient.convertToType(data['Kind'], 'String');
      }
      if (data.hasOwnProperty('Team')) {
        obj['Team'] = ApiClient.convertToType(data['Team'], 'String');
      }
      if (data.hasOwnProperty('Description')) {
        obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
      }
      if (data.hasOwnProperty('URLPath')) {
        obj['URLPath'] = ApiClient.convertToType(data['URLPath'], 'String');
      }
      if (data.hasOwnProperty('IconHash')) {
        obj['IconHash'] = ApiClient.convertToType(data['IconHash'], 'String');
      }
      if (data.hasOwnProperty('IconURL')) {
        obj['IconURL'] = ApiClient.convertToType(data['IconURL'], 'String');
      }
      if (data.hasOwnProperty('IsSystem')) {
        obj['IsSystem'] = ApiClient.convertToType(data['IsSystem'], 'Boolean');
      }
      if (data.hasOwnProperty('AppStatusInEnvs')) {
        obj['AppStatusInEnvs'] = ApiClient.convertToType(data['AppStatusInEnvs'], [AppStatusInEnv]);
      }
    }
    return obj;
  }

  /**
   * Application unique identifier.
   * @member {String} Key
   * @default ''
   */
  exports.prototype['Key'] = '';
  /**
   * Name of the application.
   * @member {String} Name
   * @default ''
   */
  exports.prototype['Name'] = '';
  /**
   * Identifies the kind of application. [Mobile|WebResponsive]
   * @member {String} Kind
   * @default ''
   */
  exports.prototype['Kind'] = '';
  /**
   * The team that owns the application.
   * @member {String} Team
   * @default ''
   */
  exports.prototype['Team'] = '';
  /**
   * Description of the application.
   * @member {String} Description
   * @default ''
   */
  exports.prototype['Description'] = '';
  /**
   * Relative URL path of the application, starting from the hostname.
   * @member {String} URLPath
   * @default ''
   */
  exports.prototype['URLPath'] = '';
  /**
   * Hash of the application icon. Can be used to detect changes in the application icon.
   * @member {String} IconHash
   * @default ''
   */
  exports.prototype['IconHash'] = '';
  /**
   * The URL for the application icon.
   * @member {String} IconURL
   * @default ''
   */
  exports.prototype['IconURL'] = '';
  /**
   * Indicates if the application is a built-in component of the AgilePlatform (e.g. ServiceCenter, LifeTime, ...).
   * @member {Boolean} IsSystem
   */
  exports.prototype['IsSystem'] = undefined;
  /**
   * Information about the status of the application in each environment it is running.
   * @member {Array.<module:model/AppStatusInEnv>} AppStatusInEnvs
   */
  exports.prototype['AppStatusInEnvs'] = undefined;



  return exports;
}));


